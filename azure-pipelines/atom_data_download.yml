trigger:
- none

pr:
- none

variables:
  system.debug: 'true'
  ATOMIC_DATA_URL: "http://kookaburra.phyast.pitt.edu/hillier/cmfgen_files/atomic_data_15nov16.tar.gz"

jobs:

- job: "Fetch_Atomic_Data"


# Agent pool and vm image
  pool:
    vmImage: "Ubuntu-16.04"
    
  steps:

# Secure files stored in the azure server are encryped and again decrypted by the azure task that uses the file
# Download a secure file to a temporary location in the virtual machine
  - task: DownloadSecureFile@1
    inputs: 
      secureFile: 'id_carsus_rsa'
# Make sure you've added the generated private key file (named 'id_azure_rsa' here) to library & authorize it for all pipelines
# by using: https://docs.microsoft.com/en-us/azure/devops/pipelines/library/secure-files?view=azure-devops#how-do-i-authorize-a-secure-file-for-use-in-all-pipelines

# Install an SSH key prior to a build or release
# This is needed to give azure access to deploy to github
# hostName is the line that was added to ~/.ssh/known_hosts when you added the RSA host key. (Output of ssh-keyscan should look something like: [1]As3..=ssh-rsa ..)
# sshPublicKey should be a string value of what is inside your .pub file (i.e: rsa-key Axddd... username@server)
# sshKeySecureFile is the downloaded secure file you generated
  - task: InstallSSHKey@0
    inputs:
     knownHostsEntry: $(gh_host)
     sshPublicKey: $(public_key)
     #sshPassphrase: # Optional - leave empty if it was left empty while generating the key
     sshKeySecureFile: 'id_carsus_rsa'


# Download atomic data for tests
  - bash: |
          mkdir /usr/share/ATOMIC_DATA
          wget $ATOMIC_DATA_URL -O /usr/share/ATOMIC_DATA/ATOMIC_DATA.gz
    displayName: "Fetch atomic data"

  - bash: |
          hash_check_1=`cat hash_check_1`
          echo $hash_check_1
          hash_check_2=`md5sum /usr/share/ATOMIC_DATA/ATOMIC_DATA.gz`
          echo $hash_check_2
          if [ "$hash_check_1" = "$hash_check_2" ]; then
              echo 'No need to update data'; else
              sed -i "s+$hash_check_1+$hash_check_2+g" hash_check_1
              tar -zxvf /usr/share/ATOMIC_DATA/ATOMIC_DATA.gz -C /usr/share/ATOMIC_DATA
          fi
    displayName: "Extract data and update hash check if updated"

# Push to github
  - bash: |
          git config --local user.name "Azure Pipelines"
          git config --local user.email "azuredevops@microsoft.com"
          git add --all
          if git diff --staged --quiet; then
            echo "exiting with no docs changes"
            exit 0
          fi
          git commit -m "Add new reference data and update hash code"
          git push origin atom_data_pipeline
    displayName: "Push to github branch"